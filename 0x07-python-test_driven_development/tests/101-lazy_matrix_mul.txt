==================
``101-matrix_mul``
==================

``matrix_mul()`` matrix x matrix.
::
	>>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul
	>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
	[[ 7 10]
	 [15 22]]

	>>> print(lazy_matrix_mul([[8.2, 2.4], [2.3, 5.4]], [[0.3, 10.0], [3.1, 7.7]]))
	[[  9.9  100.48]
	 [ 17.43  64.58]]

	>>> print(lazy_matrix_mul([[11.2, 10], [23, 0]], [[0.34, 20], [2.2, 4]]))
	[[ 25.808 264.   ]
	 [  7.82  460.   ]]

	>>> lazy_matrix_mul([], [])
	0.0

	>>> lazy_matrix_mul([[], []], [[], []])
	Traceback (most recent call last):
	ValueError: shapes (2,0) and (2,0) not aligned: 0 (dim 1) != 2 (dim 0)

	>>> lazy_matrix_mul([[]], [[]])
	Traceback (most recent call last):
	ValueError: shapes (1,0) and (1,0) not aligned: 0 (dim 1) != 1 (dim 0)

	>>> lazy_matrix_mul([['1', '2'], ['3', 4]], [["22", "10"], ["BB", "3.1416"]])
	Traceback (most recent call last):
	TypeError: invalid data type for einsum

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[22, "10"], ["BB", 3.1416]])
	Traceback (most recent call last):
	TypeError: invalid data type for einsum

	>>> lazy_matrix_mul([1, 2, 3, 4], [[22, 10], [6, 36]])
	Traceback (most recent call last):
	ValueError: shapes (4,) and (2,2) not aligned: 4 (dim 0) != 2 (dim 0)

	>>> lazy_matrix_mul([[1, 2], [3, 4]], [22, 10, 23, 3.1416])
	Traceback (most recent call last):
	ValueError: shapes (2,2) and (4,) not aligned: 2 (dim 1) != 4 (dim 0)

	>>> lazy_matrix_mul([[1, 2], [3, 4, 23], [5, 6]], [[22, 10], [0, 16]])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence.

	>>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], [[22, 10], [1], [0, 16]])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence.

	>>> lazy_matrix_mul([[3, 4], [5, 6]], [[1, 4], []])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence.

	>>> lazy_matrix_mul(((1, 2), (3, 4), (5, 6)), [[22, 10], [0, 16]])
	array([[ 22,  42],
               [ 66,  94],
               [110, 146]])

	>>> lazy_matrix_mul([[1, 2], [3, 4], [5, 6]], "[[22, 10], [1], [0, 16]]")
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> lazy_matrix_mul(88, 98)
	Traceback (most recent call last):
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> lazy_matrix_mul()
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	>>> lazy_matrix_mul([[1, 2], [3, 4]])
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

	>>> lazy_matrix_mul([[1, 2, 3], [2, 4, 6]], [[2, 4, 6], [2, 3, 5], [5, 10, 15], [20, 15, 30]])
	Traceback (most recent call last):
	ValueError: shapes (2,3) and (4,3) not aligned: 3 (dim 1) != 4 (dim 0)

	>>> lazy_matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
	 [[1, 12, 7],
     	  [4, 33, 22],
     	  [7, 54, 37]]

	 >>> matrix_mul(1, [1])
	 Traceback (most recent call last):
   	 ...
    	 TypeError: m_a must be a list

	 >>> matrix_mul([1], 1)
    	 Traceback (most recent call last):
	 ...
    	 TypeError: m_b must be a list

	 >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
	 [[1, 12, 7], [4, 33, 22], [7, 54, 37]]

	 >>> matrix_mul()
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	 >>> matrix_mul([[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

	 >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() takes 2 positional arguments but 3 were given

	 >>> matrix_mul([[1, 2], [3, 4]], [[1.5, 2.5, 3.5], [4.5, 6.5, 7.5]])
	 [[10.5, 15.5, 18.5], [22.5, 33.5, 40.5]]

	 >>> matrix_mul(None, [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_a must be a list

	 >>> matrix_mul([[1, 2], [3, 4]], None)
	 Traceback (most recent call last):
	 ...
	 TypeError: m_b must be a list

	 >>> matrix_mul([], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_a can't be empty

	 >>> matrix_mul([[1, 2], [3, 4]], [])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_b can't be empty

	 >>> matrix_mul([[1, 2], [3, 4]], [[]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_b can't be empty

	 >>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: each row of m_a must be of the same size

	 >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
	 Traceback (most recent call last):
	 ...
	 TypeError: each row of m_b must be of the same size

	 >>> matrix_mul([[1, "Hello"], [3, 4]], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_a should contain only integers or floats

	 >>> matrix_mul([[1, 2], [3, 4]], [[1, "Hello"], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_b should contain only integers or floats

	 >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4,]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_a and m_b can't be multiplied

	 Checking for no args:
	 >>> matrix_mul()
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	 >>> matrix_mul([[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

	 >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() takes 2 positional arguments but 3 were given

	 >>> matrix_mul([[1, 2], [3, 4]], [[1.5, 2.5, 3.5], [4.5, 6.5, 7.5]])
	 [[10.5, 15.5, 18.5], [22.5, 33.5, 40.5]]

	 >>> matrix_mul(None, [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_a must be a list

	 >>> matrix_mul([[1, 2], [3, 4]], None)
	 Traceback (most recent call last):
	 ...
	 TypeError: m_b must be a list

	 >>> matrix_mul([], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_a can't be empty

	 >>> matrix_mul([[1, 2], [3, 4]], [])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_b can't be empty

	 >>> matrix_mul([[1, 2], [3, 4]], [[]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_b can't be empty

	 >>> matrix_mul([[1, "Hello"], [3, 4]], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_a should contain only integers or floats

	 >>> matrix_mul([[1, 2], [3, 4]], [[1, "Hello"], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_b should contain only integers or floats

	 >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4,]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_a and m_b can't be multiplied

    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    [[1, 12, 7], [4, 33, 22], [7, 54, 37]]
    >>> matrix_mul([[1, 2], "abc", [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, "five", 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats
    >>> matrix_mul([[1, 2], [4], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2], [1, 1, 1]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied
    >>> matrix_mul([[1, 2, 3], [0, 5, 2], [1, 1, 1]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
