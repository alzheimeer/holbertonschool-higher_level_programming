==================
``101-matrix_mul``
==================

``matrix_mul()`` matrix x matrix.

::

	 >>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

	 >>> m = __import__("101-lazy_matrix_mul").__doc__
	 >>> len(m) > 1
	 True

	 >>> f = __import__("101-lazy_matrix_mul").matrix_mul.__doc__
         >>> len(f) > 1
         True

	 >>> lazy_matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
	 [[1, 12, 7],
     	  [4, 33, 22],
     	  [7, 54, 37]]

	 >>> matrix_mul(1, [1])
	 Traceback (most recent call last):
   	 ...
    	 TypeError: m_a must be a list

	 >>> matrix_mul([1], 1)
    	 Traceback (most recent call last):
	 ...
    	 TypeError: m_b must be a list

	 >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
	 [[1, 12, 7], [4, 33, 22], [7, 54, 37]]

	 >>> matrix_mul()
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	 >>> matrix_mul([[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

	 >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() takes 2 positional arguments but 3 were given

	 >>> matrix_mul([[1, 2], [3, 4]], [[1.5, 2.5, 3.5], [4.5, 6.5, 7.5]])
	 [[10.5, 15.5, 18.5], [22.5, 33.5, 40.5]]

	 >>> matrix_mul(None, [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_a must be a list

	 >>> matrix_mul([[1, 2], [3, 4]], None)
	 Traceback (most recent call last):
	 ...
	 TypeError: m_b must be a list

	 >>> matrix_mul([], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_a can't be empty

	 >>> matrix_mul([[1, 2], [3, 4]], [])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_b can't be empty

	 >>> matrix_mul([[1, 2], [3, 4]], [[]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_b can't be empty

	 >>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: each row of m_a must be of the same size

	 >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
	 Traceback (most recent call last):
	 ...
	 TypeError: each row of m_b must be of the same size

	 >>> matrix_mul([[1, "Hello"], [3, 4]], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_a should contain only integers or floats

	 >>> matrix_mul([[1, 2], [3, 4]], [[1, "Hello"], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_b should contain only integers or floats

	 >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4,]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_a and m_b can't be multiplied

	 Checking for no args:
	 >>> matrix_mul()
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	 >>> matrix_mul([[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

	 >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]], [[9, 10], [11, 12]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() takes 2 positional arguments but 3 were given

	 >>> matrix_mul([[1, 2], [3, 4]], [[1.5, 2.5, 3.5], [4.5, 6.5, 7.5]])
	 [[10.5, 15.5, 18.5], [22.5, 33.5, 40.5]]

	 >>> matrix_mul(None, [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_a must be a list

	 >>> matrix_mul([[1, 2], [3, 4]], None)
	 Traceback (most recent call last):
	 ...
	 TypeError: m_b must be a list

	 >>> matrix_mul([], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_a can't be empty

	 >>> matrix_mul([[1, 2], [3, 4]], [])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_b can't be empty

	 >>> matrix_mul([[1, 2], [3, 4]], [[]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_b can't be empty

	 >>> matrix_mul([[1, "Hello"], [3, 4]], [[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_a should contain only integers or floats

	 >>> matrix_mul([[1, 2], [3, 4]], [[1, "Hello"], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: m_b should contain only integers or floats

	 >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4,]])
	 Traceback (most recent call last):
	 ...
	 ValueError: m_a and m_b can't be multiplied

    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    [[1, 12, 7], [4, 33, 22], [7, 54, 37]]
    >>> matrix_mul([[1, 2], "abc", [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, "five", 2]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats
    >>> matrix_mul([[1, 2], [4], [7, 8]], [[1, 2, 3], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2], [0, 5, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size
    >>> matrix_mul([[1, 2], [4, 5], [7, 8]], [[1, 2, 3], [0, 5, 2], [1, 1, 1]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied
    >>> matrix_mul([[1, 2, 3], [0, 5, 2], [1, 1, 1]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
