============================
``0-add_integer`` module
============================

Integers
========

``add_integer()``

::
#0-add_integer
Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(0, 1)
    1

    >>> add_integer(1, 2)
    3

    >>> add_integer(0, -1)
    -1

    >>> add_integer(-1, 0)
    -1

    >>> add_integer(False, True)
    1
    >>> add_integer(1000.1, 1)
    1001

Floats
======
should typecast all floats to integers

    >>> add_integer(1000.1, 1000.9)
    2000

    >>> add_integer(1000.1, -1000.9)
    0

    >>> add_integer(0.0)
    98

    >>> add_integer(-98)
    0

    >>> add_integer('p', 0)
    Traceback (most recent call last):
	    ...
    TypeError: a must be an integer

    >>> add_integer(None, 0.0)
    Traceback (most recent call last):
	    ...
    TypeError: a must be an integer

    >>> add_integer(0.0, None)
    Traceback (most recent call last):
	    ...
    TypeError: b must be an integer


    >>> add_integer(0, "pepe")
    Traceback (most recent call last):
	    ...
    TypeError: b must be an integer

    >>> add_integer("pepe", 1)
    Traceback (most recent call last):
	    ...
    TypeError: a must be an integer

    >>> add_integer("pepe", "mao")
    Traceback (most recent call last):
    	    ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

    >>> add_integer('3', 3)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

    >>> add_integer((1, 1))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

    >>> add_integer(123, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

    >>> add_integer("dog")
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

    >>> add_integer(-1)
    97

    >>> add_integer(3, '3')
    Traceback (most recent call last):
              ...
    TypeError: b must be an integer

    >>> add_integer(5, float("nan"))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer([1, 2, 3], 2)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(-4, -5)
    -9

    >>> add_integer(-9.1, 5.9)
    -4

    >>> add_integer(0, 424.2)
    424

    >>> add_integer(1, 999999999999)
    1000000000000

    >>> add_integer(1, 7, 1)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
